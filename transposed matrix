import java.util.*;
import java.io.*;

class Solution {
    public int[][] matrixTranspose(int[][] mat, int n) {

//this part has O(1) space complexity
for (int i=0;i<n;i++){
                    for (int j=i+1;j<m;j++){
                        int temp = matrix[i][j];
                        matrix[i][j] = matrix[j][i];
                        matrix[j][i] = temp;
                    }
                }

    }
       //this code has O(n*n) space complexity

		int totalrow=mat.length;
		int totalcol=mat[0].length;

		int[][] tranposed=new int[n][n];
		for(int row=0;row<totalrow;row++){
			for(int col=0;col<totalcol;col++){
				tranposed[col][row]=mat[row][col];
			}
		}
		return tranposed;
	}
}

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n;
        n = sc.nextInt();
        int[][] matrix = new int[n][n];
        for (int i = 0; i < n; i++)
            for (int j = 0; j < n; j++)
                matrix[i][j] = sc.nextInt();
        Solution Obj = new Solution();
        int[][] ans = Obj.matrixTranspose(matrix, n);
        for(int i=0; i<n; i++)
        {   for(int j=0; j<n; j++)
                  {
                       System.out.print(ans[i][j] + " ");
                  } System.out.println("");
        }
        sc.close();
    }
}
